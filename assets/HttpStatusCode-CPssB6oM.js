import{isServer as y,createComponent as g,spread as h,useAssets as N,ssr as $,escape as v,getRequestEvent as O}from"solid-js/web";import{createContext as E,createUniqueId as b,useContext as P,createRenderEffect as j,onCleanup as C,sharedConfig as M}from"solid-js";const T=E(),x=["title","meta"],p=[],u=["name","http-equiv","content","charset","media"].concat(["property"]),l=(n,t)=>{const e=Object.fromEntries(Object.entries(n.props).filter(([r])=>t.includes(r)).sort());return(Object.hasOwn(e,"name")||Object.hasOwn(e,"property"))&&(e.name=e.name||e.property,delete e.property),n.tag+JSON.stringify(e)};function w(){if(!M.context){const e=document.head.querySelectorAll("[data-sm]");Array.prototype.forEach.call(e,r=>r.parentNode.removeChild(r))}const n=new Map;function t(e){if(e.ref)return e.ref;let r=document.querySelector(`[data-sm="${e.id}"]`);return r?(r.tagName.toLowerCase()!==e.tag&&(r.parentNode&&r.parentNode.removeChild(r),r=document.createElement(e.tag)),r.removeAttribute("data-sm")):r=document.createElement(e.tag),r}return{addTag(e){if(x.indexOf(e.tag)!==-1){const s=e.tag==="title"?p:u,a=l(e,s);n.has(a)||n.set(a,[]);let i=n.get(a),m=i.length;i=[...i,e],n.set(a,i);let d=t(e);e.ref=d,h(d,e.props);let c=null;for(var r=m-1;r>=0;r--)if(i[r]!=null){c=i[r];break}return d.parentNode!=document.head&&document.head.appendChild(d),c&&c.ref&&document.head.removeChild(c.ref),m}let o=t(e);return e.ref=o,h(o,e.props),o.parentNode!=document.head&&document.head.appendChild(o),-1},removeTag(e,r){const o=e.tag==="title"?p:u,s=l(e,o);if(e.ref){const a=n.get(s);if(a){if(e.ref.parentNode){e.ref.parentNode.removeChild(e.ref);for(let i=r-1;i>=0;i--)a[i]!=null&&document.head.appendChild(a[i].ref)}a[r]=null,n.set(s,a)}else e.ref.parentNode&&e.ref.parentNode.removeChild(e.ref)}}}}function S(){const n=[];return N(()=>$(k(n))),{addTag(t){if(x.indexOf(t.tag)!==-1){const e=t.tag==="title"?p:u,r=l(t,e),o=n.findIndex(s=>s.tag===t.tag&&l(s,e)===r);o!==-1&&n.splice(o,1)}return n.push(t),n.length},removeTag(t,e){}}}const H=n=>{const t=y?S():w();return g(T.Provider,{value:t,get children(){return n.children}})},f=(n,t,e)=>(q({tag:n,props:t,setting:e,id:b(),get name(){return t.name||t.property}}),null);function q(n){const t=P(T);if(!t)throw new Error("<MetaProvider /> should be in the tree");j(()=>{const e=t.addTag(n);C(()=>t.removeTag(n,e))})}function k(n){return n.map(t=>{const r=Object.keys(t.props).map(s=>s==="children"?"":` ${s}="${v(t.props[s],!0)}"`).join(""),o=t.props.children;return t.setting?.close?`<${t.tag} data-sm="${t.id}"${r}>${t.setting?.escape?v(o):o||""}</${t.tag}>`:`<${t.tag} data-sm="${t.id}"${r}/>`}).join("")}const I=n=>f("title",n,{escape:!0,close:!0}),L=n=>f("meta",n),R=n=>f("link",n),J=y?n=>{const t=O();return t.response.status=n.code,t.response.statusText=n.text,C(()=>!t.nativeEvent.handled&&(t.response.status=200)),null}:n=>null;export{J as H,R as L,H as M,I as T,L as a};
